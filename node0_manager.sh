#!/bin/bash
# Node0 Minimal Manager - FIXED VERSION
# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ü—É—Ç–∏
NODE0_DIR="$HOME/node0"
CONDA_ENV="node0"
MINICONDA_DIR="$HOME/miniconda3"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ conda
fix_conda() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ conda..."
    
    # –£–¥–∞–ª—è–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—É—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -d "$MINICONDA_DIR" ] && ! command -v conda &> /dev/null; then
        warn "–ù–∞–π–¥–µ–Ω–∞ –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ conda. –£–¥–∞–ª—è–µ–º..."
        rm -rf "$MINICONDA_DIR"
    fi
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º conda –∑–∞–Ω–æ–≤–æ
    if ! command -v conda &> /dev/null; then
        log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Miniconda..."
        
        # –°–∫–∞—á–∏–≤–∞–µ–º —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏
        local installer="Miniconda3-latest-Linux-x86_64.sh"
        wget -O "$installer" https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Ñ–∞–π–ª —Å–∫–∞—á–∞–ª—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
        if [ ! -f "$installer" ] || [ ! -s "$installer" ]; then
            error "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å Miniconda"
            return 1
        fi
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º
        bash "$installer" -b -p "$MINICONDA_DIR" -f
        rm -f "$installer"
        
        # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è conda
        "$MINICONDA_DIR/bin/conda" init bash
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤ PATH –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å–µ—Å—Å–∏–∏
        export PATH="$MINICONDA_DIR/bin:$PATH"
        
        log "Conda —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ"
    else
        log "Conda —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞
install_node0() {
    clear
    echo -e "${YELLOW}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0${NC}\n"
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º—É –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    log "–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
    sudo apt update
    sudo apt install -y git curl wget build-essential tmux lsof python3-full python3-pip python3-venv
    
    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ufw –µ—Å–ª–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
    if ! command -v ufw &> /dev/null; then
        log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º ufw..."
        sudo apt install -y ufw
    fi
    
    # –ò—Å–ø—Ä–∞–≤–ª—è–µ–º conda
    fix_conda || {
        error "–ù–µ —É–¥–∞–ª–æ—Å—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å conda"
        read -p "Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        return 1
    }
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º bash –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ conda
    source ~/.bashrc
    export PATH="$MINICONDA_DIR/bin:$PATH"
    
    # Node0
    log "–ö–ª–æ–Ω–∏—Ä—É–µ–º —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Node0..."
    [ -d "$NODE0_DIR" ] && rm -rf "$NODE0_DIR"
    
    # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–Ω—ã–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏
    if ! git clone https://github.com/PluralisResearch/node0 "$NODE0_DIR" 2>/dev/null; then
        warn "–û—Å–Ω–æ–≤–Ω–æ–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π..."
        git clone https://github.com/VaniaHilkovets/node0 "$NODE0_DIR" || {
            error "–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–æ–Ω–∏—Ä–æ–≤–∞—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π"
            read -p "Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
            return 1
        }
    fi
    
    cd "$NODE0_DIR" || {
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é node0"
        read -p "Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        return 1
    }
    
    # –°–æ–∑–¥–∞–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    log "–°–æ–∑–¥–∞–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
    "$MINICONDA_DIR/bin/conda" create -n "$CONDA_ENV" python=3.11 -y
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç—ã
    log "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ –∏ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    cat > install_deps.sh << 'EOF'
#!/bin/bash
source ~/miniconda3/bin/activate node0
pip install --upgrade pip setuptools wheel
pip install .
EOF
    chmod +x install_deps.sh
    bash install_deps.sh
    rm install_deps.sh
    
    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞..."
    sudo ufw allow 49200/tcp 2>/dev/null || warn "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–∞–π—Ä–≤–æ–ª"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –≤—Å–µ —Ñ–∞–π–ª—ã –Ω–∞ –º–µ—Å—Ç–µ
    if [ ! -f "generate_script.py" ]; then
        warn "–§–∞–π–ª generate_script.py –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –∑–∞–≥–ª—É—à–∫—É..."
        cat > generate_script.py << 'EOF'
#!/usr/bin/env python3
import os

hf_token = input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à HuggingFace —Ç–æ–∫–µ–Ω: ").strip()
if hf_token:
    with open('.env', 'w') as f:
        f.write(f'HUGGINGFACE_TOKEN={hf_token}\n')
    print("–¢–æ–∫–µ–Ω —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ .env")
else:
    print("–¢–æ–∫–µ–Ω –Ω–µ –≤–≤–µ–¥–µ–Ω")
EOF
    fi
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    log "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞..."
    echo -e "\n${RED}–ù—É–∂–µ–Ω —Ç–æ–∫–µ–Ω HuggingFace: https://huggingface.co/settings/tokens${NC}"
    echo -e "${YELLOW}–û—Ç–∫—Ä–æ–π—Ç–µ —Å—Å—ã–ª–∫—É –≤ –±—Ä–∞—É–∑–µ—Ä–µ, —Å–æ–∑–¥–∞–π—Ç–µ —Ç–æ–∫–µ–Ω –∏ –≤—Å—Ç–∞–≤—å—Ç–µ –µ–≥–æ${NC}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    python3 generate_script.py
    
    echo -e "\n${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –ó–∞–ø—É—Å–∫
start_node0() {
    clear
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ Node0${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ node0 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞
    if [ ! -d "$NODE0_DIR" ]; then
        error "Node0 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –µ—ë."
        read -p "Enter..."
        return 1
    fi
    
    # –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å—Ç–∞—Ä—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    tmux kill-session -t node0 2>/dev/null
    pkill -f "start_server.sh" 2>/dev/null
    sleep 2
    
    cd "$NODE0_DIR" || {
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–π—Ç–∏ –≤ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é node0"
        read -p "Enter..."
        return 1
    }
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ start_server.sh —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    if [ ! -f "start_server.sh" ]; then
        warn "start_server.sh –Ω–µ –Ω–∞–π–¥–µ–Ω, —Å–æ–∑–¥–∞–µ–º –±–∞–∑–æ–≤—ã–π —Å–∫—Ä–∏–ø—Ç..."
        cat > start_server.sh << 'EOF'
#!/bin/bash
source ~/miniconda3/bin/activate node0
python -m node0.server --port 49200
EOF
        chmod +x start_server.sh
    fi
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤ tmux
    log "–ó–∞–ø—É—Å–∫ –≤ tmux —Å–µ—Å—Å–∏–∏..."
    tmux new-session -d -s node0 "bash -c '
        cd \"$NODE0_DIR\"
        source ~/miniconda3/bin/activate $CONDA_ENV
        echo \"–ó–∞–ø—É—Å–∫ Node0...\"
        ./start_server.sh
        exec bash
    '"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —Å–µ—Å—Å–∏—è —Å–æ–∑–¥–∞–ª–∞—Å—å
    sleep 3
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Node0 –∑–∞–ø—É—â–µ–Ω–∞ –≤ tmux —Å–µ—Å—Å–∏–∏ 'node0'${NC}"
        echo -e "${BLUE}–î–ª—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ: tmux attach -t node0${NC}"
        echo -e "${BLUE}–î–ª—è –≤—ã—Ö–æ–¥–∞ –∏–∑ —Å–µ—Å—Å–∏–∏: Ctrl+B, –∑–∞—Ç–µ–º D${NC}"
    else
        error "–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å tmux —Å–µ—Å—Å–∏—é"
    fi
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏
attach_node0() {
    clear
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Å—Å–∏–∏ node0...${NC}"
        echo -e "${YELLOW}–î–ª—è –≤—ã—Ö–æ–¥–∞ –Ω–∞–∂–º–∏—Ç–µ: Ctrl+B, –∑–∞—Ç–µ–º D${NC}"
        sleep 2
        tmux attach -t node0
    else
        error "–°–µ—Å—Å–∏—è node0 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ –Ω–æ–¥—É."
        read -p "Enter..."
    fi
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞
stop_node0() {
    clear
    echo -e "${YELLOW}üõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0${NC}\n"
    
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ tmux —Å–µ—Å—Å–∏–∏..."
    tmux kill-session -t node0 2>/dev/null
    
    log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
    pkill -f "start_server.sh" 2>/dev/null
    pkill -f "node0" 2>/dev/null
    
    log "–û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
    rm -f /tmp/hivemind* 2>/dev/null
    
    echo -e "${GREEN}‚úÖ Node0 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
    read -p "Enter..."
}

# –£–¥–∞–ª–µ–Ω–∏–µ
remove_node0() {
    clear
    echo -e "${RED}‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –ü–æ–ª–Ω–æ–µ —É–¥–∞–ª–µ–Ω–∏–µ Node0${NC}\n"
    echo -e "${YELLOW}–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç:${NC}"
    echo "- –í—Å–µ —Ñ–∞–π–ª—ã Node0"
    echo "- Conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
    echo "- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é"
    echo ""
    echo -e "${RED}–í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:${NC} "
    read confirm
    
    if [ "$confirm" = "YES" ]; then
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤..."
        stop_node0 >/dev/null 2>&1
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
        if [ -f "$NODE0_DIR/private.key" ]; then
            log "–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞..."
            cp "$NODE0_DIR/private.key" ~/private.key.backup
            echo -e "${GREEN}–ü—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ ~/private.key.backup${NC}"
        fi
        
        log "–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."
        rm -rf "$NODE0_DIR"
        
        log "–£–¥–∞–ª–µ–Ω–∏–µ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
        if command -v conda &> /dev/null; then
            conda remove -n "$CONDA_ENV" --all -y 2>/dev/null
        fi
        
        echo -e "${GREEN}‚úÖ Node0 –ø–æ–ª–Ω–æ—Å—Ç—å—é —É–¥–∞–ª–µ–Ω–∞!${NC}"
    else
        log "–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ"
    fi
    read -p "Enter..."
}

# –°—Ç–∞—Ç—É—Å
show_status() {
    clear
    echo -e "${BLUE}üìä –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if [ -d "$NODE0_DIR" ]; then
        echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    else
        echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${RED}‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ conda
    if command -v conda &> /dev/null; then
        echo -e "Conda: ${GREEN}‚úÖ –î–æ—Å—Ç—É–ø–Ω–∞${NC}"
        if conda env list | grep -q "$CONDA_ENV"; then
            echo -e "–û–∫—Ä—É–∂–µ–Ω–∏–µ: ${GREEN}‚úÖ $CONDA_ENV —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
        else
            echo -e "–û–∫—Ä—É–∂–µ–Ω–∏–µ: ${RED}‚ùå $CONDA_ENV –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
        fi
    else
        echo -e "Conda: ${RED}‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ tmux —Å–µ—Å—Å–∏–∏
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "Tmux —Å–µ—Å—Å–∏—è: ${GREEN}‚úÖ –ê–∫—Ç–∏–≤–Ω–∞${NC}"
    else
        echo -e "Tmux —Å–µ—Å—Å–∏—è: ${RED}‚ùå –ù–µ–∞–∫—Ç–∏–≤–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    if pgrep -f "node0" >/dev/null; then
        echo -e "–ü—Ä–æ—Ü–µ—Å—Å—ã: ${GREEN}‚úÖ –ó–∞–ø—É—â–µ–Ω—ã${NC}"
    else
        echo -e "–ü—Ä–æ—Ü–µ—Å—Å—ã: ${RED}‚ùå –ù–µ –∑–∞–ø—É—â–µ–Ω—ã${NC}"
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –õ–æ–≥–∏
show_logs() {
    clear
    echo -e "${BLUE}üìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –ª–æ–≥–∏ Node0${NC}\n"
    
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${YELLOW}–ü–æ–∫–∞–∑—ã–≤–∞—é –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ tmux —Å–µ—Å—Å–∏–∏:${NC}\n"
        tmux capture-pane -t node0 -p
    else
        echo -e "${RED}Tmux —Å–µ—Å—Å–∏—è node0 –Ω–µ –∞–∫—Ç–∏–≤–Ω–∞${NC}"
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        clear
        echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
        echo -e "${BLUE}‚ïë         NODE0 MANAGER            ‚ïë${NC}"
        echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
        
        # –°—Ç–∞—Ç—É—Å
        if tmux has-session -t node0 2>/dev/null; then
            echo -e "–°—Ç–∞—Ç—É—Å: ${GREEN}üü¢ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
        else
            echo -e "–°—Ç–∞—Ç—É—Å: ${RED}üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
        fi
        
        if [ -d "$NODE0_DIR" ]; then
            echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤–∞${NC}\n"
        else
            echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è${NC}\n"
        fi
        
        echo "1) üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
        echo "2) üöÄ –ó–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–¥—É"
        echo "3) üîó –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏"
        echo "4) üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–æ–¥—É"
        echo "5) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å –Ω–æ–¥—É"
        echo "6) üìä –ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "7) üìã –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏"
        echo "0) üö™ –í—ã—Ö–æ–¥"
        echo ""
        
        read -p "–í–∞—à –≤—ã–±–æ—Ä: " choice
        
        case $choice in
            1) install_node0 ;;
            2) start_node0 ;;
            3) attach_node0 ;;
            4) stop_node0 ;;
            5) remove_node0 ;;
            6) show_status ;;
            7) show_logs ;;
            0) 
                echo -e "${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0 
                ;;
            *) 
                error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
                sleep 1
                ;;
        esac
    done
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
check_system() {
    if ! command -v tmux &> /dev/null; then
        error "tmux –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo apt update && sudo apt install -y tmux
    fi
    
    if ! command -v git &> /dev/null; then
        error "git –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º..."
        sudo apt update && sudo apt install -y git
    fi
}

# –ó–∞–ø—É—Å–∫
echo -e "${GREEN}–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Node0 Manager...${NC}"
check_system
main_menu
