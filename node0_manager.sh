#!/bin/bash
# Node0 Pluralis Manager - Minimal
# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ü—É—Ç–∏
NODE0_DIR="$HOME/node0"
CONDA_ENV="node0"

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –≥–∞–π–¥—É
install_dependencies() {
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏..."
    
    # Update System Packages
    sudo apt update && sudo apt upgrade -y
    
    # Install General Utilities and Tools
    sudo apt install screen curl iptables build-essential git wget lz4 jq make gcc nano automake autoconf tmux htop nvme-cli libgbm1 pkg-config libssl-dev libleveldb-dev tar clang bsdmainutils ncdu unzip libleveldb-dev -y
    
    # Install Python and pip
    sudo apt install -y python3-pip
    sudo apt install pip
    sudo apt install -y build-essential libssl-dev libffi-dev python3-dev
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Conda –ø–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–º—É –≥–∞–π–¥—É
install_conda() {
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Conda..."
    
    mkdir -p ~/miniconda3
    wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh -O ~/miniconda3/miniconda.sh
    bash ~/miniconda3/miniconda.sh -b -u -p ~/miniconda3
    rm ~/miniconda3/miniconda.sh
    
    # –ü—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è conda
    ~/miniconda3/bin/conda config --set channel_priority strict
    ~/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
    ~/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
    
    source ~/miniconda3/bin/activate
    conda init --all
    
    # –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º bashrc
    source ~/.bashrc
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0
install_node0() {
    clear
    echo -e "${YELLOW}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0 Pluralis${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    if ! command -v conda &> /dev/null; then
        install_dependencies
        install_conda
    fi
    
    # –°–ù–ê–ß–ê–õ–ê –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º conda –ø—Ä–∞–≤–∏–ª—å–Ω–æ
    log "–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º conda..."
    export PATH="$HOME/miniconda3/bin:$PATH"
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º conda –¥–ª—è bash
    ~/miniconda3/bin/conda init bash
    source ~/.bashrc
    
    # –ü–†–ò–ù–ò–ú–ê–ï–ú Terms of Service –°–†–ê–ó–£
    log "–ü—Ä–∏–Ω–∏–º–∞–µ–º —É—Å–ª–æ–≤–∏—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è conda..."
    ~/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main
    ~/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r
    ~/miniconda3/bin/conda config --set channel_priority strict
    
    # –ö–ª–æ–Ω–∏—Ä—É–µ–º –û–§–ò–¶–ò–ê–õ–¨–ù–´–ô —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π
    log "–ö–ª–æ–Ω–∏—Ä—É–µ–º –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π Pluralis..."
    [ -d "$NODE0_DIR" ] && rm -rf "$NODE0_DIR"
    git clone https://github.com/PluralisResearch/node0 "$NODE0_DIR"
    cd "$NODE0_DIR"
    
    # –¢–ï–ü–ï–†–¨ —Å–æ–∑–¥–∞–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º Python
    log "–°–æ–∑–¥–∞–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ node0 —Å Python 3.11..."
    ~/miniconda3/bin/conda create -n node0 python=3.11 -y --override-channels -c conda-forge
    
    # –ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ –ü–†–ê–í–ò–õ–¨–ù–û
    log "–ê–∫—Ç–∏–≤–∏—Ä—É–µ–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ node0..."
    source ~/miniconda3/bin/activate node0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ Python –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π
    log "–ü—Ä–æ–≤–µ—Ä—è–µ–º Python –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏..."
    echo "Python version: $(python --version)"
    echo "Python path: $(which python)"
    
    # –ï—Å–ª–∏ Python –≤—Å–µ –µ—â–µ –Ω–µ 3.11 - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —Å—Ç–∞–≤–∏–º
    if ! python --version | grep -q "3.11"; then
        log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.11..."
        conda install python=3.11 -y --override-channels -c conda-forge
        echo "–ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è Python: $(python --version)"
    fi
    
    # –¢–ï–ü–ï–†–¨ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node0 –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏
    log "–£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node0 –≤ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω–æ–º –æ–∫—Ä—É–∂–µ–Ω–∏–∏..."
    pip install --upgrade pip
    pip install .
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    CONFIG_FILE="$HOME/.node0_config"
    
    echo -e "\n${BLUE}=== –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Node0 ===${NC}"
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –µ—Å–ª–∏ –µ—Å—Ç—å
    if [ -f "$CONFIG_FILE" ]; then
        source "$CONFIG_FILE"
        echo "–ù–∞–π–¥–µ–Ω—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:"
        echo "Email: ${SAVED_EMAIL:-–Ω–µ –∑–∞–¥–∞–Ω}"
        echo "Token: ${SAVED_TOKEN:0:10}... (—Å–∫—Ä—ã—Ç)"
        echo "Announce port: ${SAVED_ANNOUNCE_PORT:-–Ω–µ –∑–∞–¥–∞–Ω}"
        echo ""
        read -p "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ? (y/n): " use_saved
        if [ "$use_saved" = "y" ] || [ "$use_saved" = "Y" ]; then
            HF_TOKEN="$SAVED_TOKEN"
            EMAIL_ADDRESS="$SAVED_EMAIL"
            ANNOUNCE_PORT="$SAVED_ANNOUNCE_PORT"
        fi
    fi
    
    # –ï—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∏–ª–∏ –∏—Ö –Ω–µ—Ç - —Å–ø—Ä–∞—à–∏–≤–∞–µ–º
    if [ -z "$HF_TOKEN" ]; then
        echo "1. HuggingFace —Ç–æ–∫–µ–Ω: https://huggingface.co/settings/tokens"
        echo "2. Email –∞–¥—Ä–µ—Å"
        echo "3. Announce port (–µ—Å–ª–∏ Vast - –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –ø–∞–Ω–µ–ª–∏, –∏–Ω–∞—á–µ Enter)"
        echo ""
        
        read -p "HuggingFace —Ç–æ–∫–µ–Ω: " HF_TOKEN
        read -p "Email –∞–¥—Ä–µ—Å: " EMAIL_ADDRESS
        read -p "Announce port (Enter –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞): " ANNOUNCE_PORT
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ
        echo "SAVED_TOKEN='$HF_TOKEN'" > "$CONFIG_FILE"
        echo "SAVED_EMAIL='$EMAIL_ADDRESS'" >> "$CONFIG_FILE"
        echo "SAVED_ANNOUNCE_PORT='$ANNOUNCE_PORT'" >> "$CONFIG_FILE"
        chmod 600 "$CONFIG_FILE"  # –¢–æ–ª—å–∫–æ –¥–ª—è –≤–ª–∞–¥–µ–ª—å—Ü–∞
        log "–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ $CONFIG_FILE"
    fi
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º start_server.sh
    log "–ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é..."
    if [ -z "$ANNOUNCE_PORT" ]; then
        python3 generate_script.py --host_port 49200 --token "$HF_TOKEN" --email "$EMAIL_ADDRESS"
    else
        python3 generate_script.py --host_port 49200 --announce_port "$ANNOUNCE_PORT" --token "$HF_TOKEN" --email "$EMAIL_ADDRESS"
    fi
    
    # –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–û –ò–°–ü–†–ê–í–õ–Ø–ï–ú start_server.sh
    log "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º start_server.sh –¥–ª—è –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Ä–∞–±–æ—Ç—ã —Å conda..."
    if [ -f "start_server.sh" ]; then
        # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é
        cp start_server.sh start_server.sh.backup
        
        # –ó–∞–º–µ–Ω—è–µ–º –≤—Å–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏—è python3.11 –Ω–∞ python
        sed -i 's/python3\.11/python/g' start_server.sh
        sed -i 's/python3/python/g' start_server.sh
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∞–∫—Ç–∏–≤–∞—Ü–∏—é conda –≤ –Ω–∞—á–∞–ª–æ —Ñ–∞–π–ª–∞ –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
        if ! grep -q "conda activate" start_server.sh; then
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π start_server.sh —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –∞–∫—Ç–∏–≤–∞—Ü–∏–µ–π
            cat > start_server.sh << 'EOF'
#!/bin/bash
set -e
echo "=== –ó–∞–ø—É—Å–∫ Node0 Pluralis ==="
export PATH="$HOME/miniconda3/bin:$PATH"
source ~/miniconda3/bin/activate node0
echo "Python version: $(python --version)"
echo "Python path: $(which python)"
echo "Conda environment: $CONDA_DEFAULT_ENV"
echo "=== –°—Ç–∞—Ä—Ç —Å–µ—Ä–≤–µ—Ä–∞ ==="
EOF
            # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–µ–∑ –ø–µ—Ä–≤—ã—Ö —Å—Ç—Ä–æ–∫ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
            tail -n +4 start_server.sh.backup >> start_server.sh
            chmod +x start_server.sh
        fi
        
        log "start_server.sh –∏—Å–ø—Ä–∞–≤–ª–µ–Ω"
    else
        error "start_server.sh –Ω–µ —Å–æ–∑–¥–∞–Ω!"
    fi
    
    echo -e "\n${GREEN}‚úÖ Node0 —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
    read -p "Enter..."
}

# –ó–∞–ø—É—Å–∫ –≤ tmux
start_node0() {
    clear
    echo -e "${YELLOW}üöÄ –ó–∞–ø—É—Å–∫ Node0${NC}\n"
    
    if [ ! -d "$NODE0_DIR" ]; then
        error "Node0 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ —Å–Ω–∞—á–∞–ª–∞."
        read -p "Enter..."
        return
    fi
    
    cd "$NODE0_DIR"
    
    if [ ! -f "start_server.sh" ]; then
        error "start_server.sh –Ω–µ –Ω–∞–π–¥–µ–Ω! –ü–µ—Ä–µ—É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node0."
        read -p "Enter..."
        return
    fi
    
    # –£–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—É—é tmux —Å–µ—Å—Å–∏—é –∏ –æ—á–∏—â–∞–µ–º –ø–æ—Ä—Ç—ã
    tmux kill-session -t node0 2>/dev/null
    rm -f /tmp/hivemind* 2>/dev/null
    if command -v lsof &> /dev/null; then
        for i in $(sudo lsof -t -i tcp:49200 2>/dev/null); do 
            sudo kill -9 $i 2>/dev/null
        done
    fi
    
    log "–ó–∞–ø—É—Å–∫–∞–µ–º –≤ tmux —Å–µ—Å—Å–∏–∏ 'node0'..."
    tmux new-session -d -s node0 "bash -c '
        export PATH=\"$HOME/miniconda3/bin:\$PATH\"
        echo \"=== –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–∫—Ä—É–∂–µ–Ω–∏—è ===\"
        source ~/miniconda3/bin/activate node0
        echo \"Python version: \$(python --version)\"
        echo \"Python path: \$(which python)\"
        echo \"Conda environment: \$CONDA_DEFAULT_ENV\"
        echo \"=== –ó–∞–ø—É—Å–∫ Node0 ===\"
        cd $NODE0_DIR
        ./start_server.sh
    '"
    
    sleep 3
    echo -e "${GREEN}‚úÖ Node0 –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: tmux attach -t node0${NC}"
    echo -e "${BLUE}–í—ã–π—Ç–∏: Ctrl+B, –∑–∞—Ç–µ–º D${NC}"
    read -p "Enter..."
}

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ tmux
connect_tmux() {
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${BLUE}–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ tmux —Å–µ—Å—Å–∏–∏ node0...${NC}"
        echo -e "${YELLOW}–î–ª—è –≤—ã—Ö–æ–¥–∞: Ctrl+B, –∑–∞—Ç–µ–º D${NC}"
        sleep 2
        tmux attach -t node0
    else
        error "Tmux —Å–µ—Å—Å–∏—è 'node0' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        echo -e "${YELLOW}–°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏—Ç–µ Node0${NC}"
        read -p "Enter..."
    fi
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node0
update_node0() {
    clear
    echo -e "${YELLOW}üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Node0${NC}\n"
    
    if [ ! -d "$NODE0_DIR" ]; then
        error "Node0 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!"
        read -p "Enter..."
        return
    fi
    
    cd "$NODE0_DIR"
    
    log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Node0..."
    tmux kill-session -t node0 2>/dev/null
    rm -f /tmp/hivemind* 2>/dev/null
    if command -v lsof &> /dev/null; then
        for i in $(sudo lsof -t -i tcp:49200 2>/dev/null); do 
            sudo kill -9 $i 2>/dev/null
        done
    fi
    
    log "–û–±–Ω–æ–≤–ª—è–µ–º –∫–æ–¥..."
    git pull
    
    log "–ü–µ—Ä–µ—É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–∞–∫–µ—Ç..."
    source ~/miniconda3/bin/activate node0
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–µ—Ä—Å–∏—é Python
    if ! python --version | grep -q "3.11"; then
        log "–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Python 3.11..."
        conda install python=3.11 -y --override-channels -c conda-forge
    fi
    
    pip install .
    
    # –ò–°–ü–†–ê–í–õ–Ø–ï–ú start_server.sh –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if [ -f "start_server.sh" ]; then
        log "–ò—Å–ø—Ä–∞–≤–ª—è–µ–º start_server.sh..."
        cp start_server.sh start_server.sh.backup
        sed -i 's/python3\.11/python/g' start_server.sh
        sed -i 's/python3/python/g' start_server.sh
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –∞–∫—Ç–∏–≤–∞—Ü–∏—è conda –µ—Å—Ç—å
        if ! grep -q "conda activate" start_server.sh; then
            sed -i '1a source ~/miniconda3/bin/activate node0' start_server.sh
        fi
    fi
    
    echo -e "${GREEN}‚úÖ Node0 –æ–±–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
    read -p "Enter..."
}

# –£–¥–∞–ª–µ–Ω–∏–µ
remove_node0() {
    clear
    echo -e "${RED}‚ö†Ô∏è  –£–î–ê–õ–ï–ù–ò–ï NODE0${NC}\n"
    echo -e "${YELLOW}–≠—Ç–æ —É–¥–∞–ª–∏—Ç –≤—Å–µ —Ñ–∞–π–ª—ã Node0${NC}"
    echo -e "${GREEN}private.key –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∫–∞–∫ ~/private.key.backup${NC}"
    echo ""
    echo -e "${RED}–í–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:${NC} "
    read confirm
    
    if [ "$confirm" = "YES" ]; then
        log "–û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã..."
        tmux kill-session -t node0 2>/dev/null
        rm -f /tmp/hivemind* 2>/dev/null
        if command -v lsof &> /dev/null; then
            for i in $(sudo lsof -t -i tcp:49200 2>/dev/null); do 
                sudo kill -9 $i 2>/dev/null
            done
        fi
        
        if [ -f "$NODE0_DIR/private.key" ]; then
            log "–°–æ—Ö—Ä–∞–Ω—è–µ–º private.key..."
            cp "$NODE0_DIR/private.key" ~/private.key.backup
        fi
        
        log "–£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª—ã..."
        rm -rf "$NODE0_DIR"
        
        log "–£–¥–∞–ª—è–µ–º conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ..."
        conda remove -n node0 --all -y 2>/dev/null
        
        echo -e "${GREEN}‚úÖ Node0 —É–¥–∞–ª–µ–Ω–∞${NC}"
    else
        echo -e "${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ${NC}"
    fi
    read -p "Enter..."
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
    clear
    echo -e "${BLUE}‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó${NC}"
    echo -e "${BLUE}‚ïë       NODE0 PLURALIS MANAGER      ‚ïë${NC}"
    echo -e "${BLUE}‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù${NC}\n"
    
    # –°—Ç–∞—Ç—É—Å
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "–°—Ç–∞—Ç—É—Å: ${GREEN}üü¢ –†–∞–±–æ—Ç–∞–µ—Ç${NC}"
    else
        echo -e "–°—Ç–∞—Ç—É—Å: ${RED}üî¥ –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
    
    if [ -d "$NODE0_DIR" ]; then
        echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${GREEN}‚úÖ –ì–æ—Ç–æ–≤–∞${NC}\n"
    else
        echo -e "–£—Å—Ç–∞–Ω–æ–≤–∫–∞: ${RED}‚ùå –¢—Ä–µ–±—É–µ—Ç—Å—è${NC}\n"
    fi
    
    echo "1) –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å"
    echo "2) –ó–∞–ø—É—Å—Ç–∏—Ç—å"
    echo "3) –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è"
    echo "4) –û–±–Ω–æ–≤–∏—Ç—å"
    echo "5) –£–¥–∞–ª–∏—Ç—å"
    echo "0) –í—ã—Ö–æ–¥"
    echo ""
    
    read -p "–í—ã–±–æ—Ä: " choice
    
    case $choice in
        1) install_node0 ;;
        2) start_node0 ;;
        3) connect_tmux ;;
        4) update_node0 ;;
        5) remove_node0 ;;
        0) exit 0 ;;
        *) 
            error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä"
            sleep 1
            ;;
    esac
done
