#!/bin/bash

# Node0 Manager Script - Fixed Version
# –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–æ–π, –∑–∞–ø—É—Å–∫–æ–º –∏ —É–¥–∞–ª–µ–Ω–∏–µ–º Node0

# –¶–≤–µ—Ç–∞ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –ü—É—Ç—å –∫ Node0
NODE0_DIR="$HOME/node0"
CONDA_ENV="node0"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
show_logo() {
    clear
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë        NODE0 MANAGER v1.0             ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
check_status() {
    echo -e "\n${YELLOW}üìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞...${NC}"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ conda
    if command -v conda &> /dev/null; then
        echo -e "${GREEN}‚úì Conda —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    else
        echo -e "${RED}‚úó Conda –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    if conda env list | grep -q "$CONDA_ENV"; then
        echo -e "${GREEN}‚úì –û–∫—Ä—É–∂–µ–Ω–∏–µ node0 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    else
        echo -e "${RED}‚úó –û–∫—Ä—É–∂–µ–Ω–∏–µ node0 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    if [ -d "$NODE0_DIR" ]; then
        echo -e "${GREEN}‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è node0 —Å—É—â–µ—Å—Ç–≤—É–µ—Ç${NC}"
    else
        echo -e "${RED}‚úó –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è node0 –Ω–µ –Ω–∞–π–¥–µ–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ tmux —Å–µ—Å—Å–∏–∏ –∏ –ø—Ä–æ—Ü–µ—Å—Å–∞ start_server.sh
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${GREEN}‚úì Node0 –∑–∞–ø—É—â–µ–Ω–∞ –≤ tmux${NC}"
    elif pgrep -f "start_server.sh" > /dev/null; then
        echo -e "${GREEN}‚úì Node0 –∑–∞–ø—É—â–µ–Ω–∞${NC}"
        echo "PID –ø—Ä–æ—Ü–µ—Å—Å–æ–≤: $(pgrep -f "start_server.sh" | tr '\n' ' ')"
    else
        echo -e "${RED}‚úó Node0 –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU
    if command -v nvidia-smi &> /dev/null; then
        echo -e "${GREEN}‚úì NVIDIA –¥—Ä–∞–π–≤–µ—Ä —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω${NC}"
        nvidia-smi --query-gpu=name,memory.total,memory.used --format=csv,noheader
    else
        echo -e "${RED}‚úó NVIDIA –¥—Ä–∞–π–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω${NC}"
    fi
    
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
    read
}

# –§—É–Ω–∫—Ü–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
install_node0() {
    show_logo
    echo -e "${YELLOW}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    echo "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU
    if ! command -v nvidia-smi &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: NVIDIA –¥—Ä–∞–π–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä –∫–æ–º–∞–Ω–¥–æ–π: sudo apt install nvidia-driver-525"
        return 1
    fi
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
    echo -e "\n${YELLOW}1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    sudo apt update && sudo apt install -y git curl wget build-essential tmux lsof
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Miniconda –µ—Å–ª–∏ –Ω–µ—Ç
    if ! command -v conda &> /dev/null; then
        echo -e "\n${YELLOW}2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Miniconda...${NC}"
        wget https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3
        echo 'export PATH="$HOME/miniconda3/bin:$PATH"' >> ~/.bashrc
        export PATH="$HOME/miniconda3/bin:$PATH"
        rm Miniconda3-latest-Linux-x86_64.sh
    else
        echo -e "\n${GREEN}2. Miniconda —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
    fi
    
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
    echo -e "\n${YELLOW}3. –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è...${NC}"
    if [ -d "$NODE0_DIR" ]; then
        echo "–î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –û–±–Ω–æ–≤–ª—è–µ–º..."
        cd "$NODE0_DIR" && git pull
    else
        git clone https://github.com/PluralisResearch/node0 "$NODE0_DIR"
    fi
    
    cd "$NODE0_DIR"
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
    echo -e "\n${YELLOW}4. –°–æ–∑–¥–∞–Ω–∏–µ Python –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    conda create -n $CONDA_ENV python=3.11 -y
    
    # –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0
    echo -e "\n${YELLOW}5. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0...${NC}"
    source ~/miniconda3/bin/activate $CONDA_ENV
    pip install .
    
    # –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞
    echo -e "\n${YELLOW}6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–∞–π—Ä–≤–æ–ª–∞...${NC}"
    sudo ufw allow 49200/tcp
    sudo ufw reload
    
    # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞
    echo -e "\n${YELLOW}7. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–∫—Ä–∏–ø—Ç–∞ –∑–∞–ø—É—Å–∫–∞...${NC}"
    echo -e "${RED}–í–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Ç–æ–∫–µ–Ω HuggingFace!${NC}"
    echo "–ü–æ–ª—É—á–∏—Ç–µ –µ–≥–æ –∑–¥–µ—Å—å: https://huggingface.co/settings/tokens"
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç–µ –≥–æ—Ç–æ–≤—ã..."
    read
    
    python3 generate_script.py
    
    echo -e "\n${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    echo "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    read
}

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞
start_node0() {
    show_logo
    echo -e "${YELLOW}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ Node0${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    if [ ! -d "$NODE0_DIR" ] || [ ! -f "$NODE0_DIR/start_server.sh" ]; then
        echo -e "${RED}–û—à–∏–±–∫–∞: Node0 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!${NC}"
        echo "–°–Ω–∞—á–∞–ª–∞ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∫—É (–ø—É–Ω–∫—Ç 1)"
        echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è..."
        read
        return 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—â–µ–Ω–Ω–æ–π tmux —Å–µ—Å—Å–∏–∏ –∏–ª–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
    if tmux has-session -t node0 2>/dev/null || pgrep -f "start_server.sh" > /dev/null; then
        echo -e "${YELLOW}–û–±–Ω–∞—Ä—É–∂–µ–Ω–∞ —Ä–∞–±–æ—Ç–∞—é—â–∞—è Node0!${NC}"
        echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞...${NC}"
        stop_node0_process
        sleep 2
    fi
    
    cd "$NODE0_DIR"
    
    echo -e "\n${YELLOW}–ó–∞–ø—É—Å–∫ Node0 –≤ tmux...${NC}"
    tmux new-session -d -s node0 "cd $NODE0_DIR && ./start_server.sh"
    
    sleep 2
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞
    if tmux has-session -t node0 2>/dev/null; then
        echo -e "${GREEN}‚úÖ Node0 —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω–∞ –≤ tmux —Å–µ—Å—Å–∏–∏ 'node0'${NC}"
        echo ""
        echo "–ü–æ–ª–µ–∑–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
        echo "  ${GREEN}–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏:${NC} tmux attach -t node0"
        echo "  ${GREEN}–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç —Å–µ—Å—Å–∏–∏:${NC} Ctrl+B, –∑–∞—Ç–µ–º D"
        echo "  ${GREEN}–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏:${NC} tail -f $NODE0_DIR/logs/server.log"
    else
        echo -e "${RED}–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞! –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏.${NC}"
    fi
    
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    read
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
stop_node0_process() {
    echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0...${NC}"
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ tmux —Å–µ—Å—Å–∏–∏
    if tmux has-session -t node0 2>/dev/null; then
        tmux kill-session -t node0
        echo "Tmux —Å–µ—Å—Å–∏—è –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞"
    fi
    
    # –£–±–∏–≤–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã start_server.sh
    if pgrep -f "start_server.sh" > /dev/null; then
        pkill -f "start_server.sh"
        echo "–ü—Ä–æ—Ü–µ—Å—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    
    # –û—á–∏—Å—Ç–∫–∞
    rm -f /tmp/hivemind* 2>/dev/null
    
    # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
    for i in $(lsof -t -i tcp:49200 2>/dev/null); do
        kill -9 $i 2>/dev/null
    done
    
    # –û—Å–≤–æ–±–æ–∂–¥–µ–Ω–∏–µ GPU
    for i in $(lsof /dev/nvidia* 2>/dev/null | grep python | awk '{print $2}' | sort -u); do
        kill -9 $i 2>/dev/null
    done
    
    echo -e "${GREEN}‚úÖ Node0 –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
stop_node0() {
    show_logo
    echo -e "${YELLOW}‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0${NC}\n"
    
    if tmux has-session -t node0 2>/dev/null || pgrep -f "start_server.sh" > /dev/null; then
        stop_node0_process
    else
        echo -e "${YELLOW}Node0 –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞${NC}"
    fi
    
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    read
}

# –§—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è
remove_node0() {
    show_logo
    echo -e "${RED}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ Node0${NC}\n"
    
    echo -e "${RED}–í–ù–ò–ú–ê–ù–ò–ï! –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç:${NC}"
    echo "- –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—é $NODE0_DIR"
    echo "- Conda –æ–∫—Ä—É–∂–µ–Ω–∏–µ $CONDA_ENV"
    echo "- –í—Å–µ –ª–æ–≥–∏ –∏ –¥–∞–Ω–Ω—ã–µ"
    echo -e "\n${YELLOW}–í–∞–∂–Ω–æ: —Ñ–∞–π–ª private.key –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ~/node0_backup/${NC}"
    echo -e "\n–í—ã —É–≤–µ—Ä–µ–Ω—ã? (–≤–≤–µ–¥–∏—Ç–µ 'YES' –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è): "
    read confirm
    
    if [ "$confirm" != "YES" ]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
        echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
        read
        return 0
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω–∞
    if tmux has-session -t node0 2>/dev/null || pgrep -f "start_server.sh" > /dev/null; then
        echo -e "\n${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤...${NC}"
        stop_node0_process
    fi
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ private.key
    if [ -f "$NODE0_DIR/private.key" ]; then
        echo -e "\n${YELLOW}–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ private.key...${NC}"
        mkdir -p ~/node0_backup
        cp "$NODE0_DIR/private.key" ~/node0_backup/private.key.$(date +%Y%m%d_%H%M%S)
        echo -e "${GREEN}‚úì private.key —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ~/node0_backup/${NC}"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    echo -e "\n${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ —Ñ–∞–π–ª–æ–≤...${NC}"
    rm -rf "$NODE0_DIR"
    
    # –£–¥–∞–ª–µ–Ω–∏–µ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è
    echo -e "\n${YELLOW}–£–¥–∞–ª–µ–Ω–∏–µ conda –æ–∫—Ä—É–∂–µ–Ω–∏—è...${NC}"
    conda remove -n $CONDA_ENV --all -y 2>/dev/null
    
    echo -e "\n${GREEN}‚úÖ Node0 —É–¥–∞–ª–µ–Ω–∞${NC}"
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    read
}

# –§—É–Ω–∫—Ü–∏—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ª–æ–≥–æ–≤
view_logs() {
    show_logo
    echo -e "${YELLOW}üìã –ü—Ä–æ—Å–º–æ—Ç—Ä –ª–æ–≥–æ–≤${NC}\n"
    
    if [ ! -f "$NODE0_DIR/logs/server.log" ]; then
        echo -e "${RED}–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!${NC}"
        echo "Node0 –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∑–∞–ø—É—â–µ–Ω–∞ —Ö–æ—Ç—è –±—ã —Ä–∞–∑"
        echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
        read
        return 1
    fi
    
    echo "1) –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫"
    echo "2) –°–ª–µ–¥–∏—Ç—å –∑–∞ –ª–æ–≥–∞–º–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "3) –ü–æ–∏—Å–∫ –æ—à–∏–±–æ–∫"
    echo "4) –ü–æ–ª–Ω—ã–π –ª–æ–≥"
    echo -e "\n–í—ã–±–æ—Ä: "
    read choice
    
    case $choice in
        1)
            tail -n 50 "$NODE0_DIR/logs/server.log"
            ;;
        2)
            echo -e "${YELLOW}–°–ª–µ–¥–∏–º –∑–∞ –ª–æ–≥–∞–º–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞)...${NC}\n"
            tail -f "$NODE0_DIR/logs/server.log"
            ;;
        3)
            echo -e "${YELLOW}–û—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö:${NC}\n"
            grep -i "error\|fail\|exception" "$NODE0_DIR/logs/server.log" | tail -20
            ;;
        4)
            less "$NODE0_DIR/logs/server.log"
            ;;
    esac
    
    echo -e "\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    read
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu() {
    while true; do
        show_logo
        
        echo "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:"
        echo ""
        echo "  1) üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node0"
        echo "  2) ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å Node0"
        echo "  3) ‚èπÔ∏è  –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node0"
        echo "  4) üìä –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å—Ç–∞—Ç—É—Å"
        echo "  5) üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
        echo "  6) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å Node0"
        echo "  0) üö™ –í—ã—Ö–æ–¥"
        echo ""
        echo -n "–í–∞—à –≤—ã–±–æ—Ä: "
        read choice
        
        case $choice in
            1) install_node0 ;;
            2) start_node0 ;;
            3) stop_node0 ;;
            4) check_status ;;
            5) view_logs ;;
            6) remove_node0 ;;
            0) 
                echo -e "\n${GREEN}–î–æ —Å–≤–∏–¥–∞–Ω–∏—è!${NC}"
                exit 0
                ;;
            *)
                echo -e "\n${RED}–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!${NC}"
                sleep 1
                ;;
        esac
    done
}

# –ó–∞–ø—É—Å–∫
main_menu
