#!/bin/bash

# Node0 Simple Manager
# –£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –º–µ–Ω–µ–¥–∂–µ—Ä–∞

# –¶–≤–µ—Ç–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

# –ü—É—Ç–∏
NODE0_DIR="$HOME/node0"
CONDA_ENV="node0"

# –õ–æ–≥–æ—Ç–∏–ø
show_logo() {
    clear
    echo -e "${BLUE}"
    echo "‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó"
    echo "‚ïë        NODE0 MANAGER v1.0             ‚ïë"
    echo "‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù"
    echo -e "${NC}"
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞
install_node0() {
    show_logo
    echo -e "${YELLOW}üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Node0${NC}\n"
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ GPU
    if ! command -v nvidia-smi &> /dev/null; then
        echo -e "${RED}–û—à–∏–±–∫–∞: NVIDIA –¥—Ä–∞–π–≤–µ—Ä –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!${NC}"
        echo "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –¥—Ä–∞–π–≤–µ—Ä: sudo apt install nvidia-driver-525"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
        return 1
    fi
    
    echo "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–π–º–µ—Ç 5-10 –º–∏–Ω—É—Ç..."
    
    # –°–∏—Å—Ç–µ–º–Ω—ã–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
    echo -e "\n${YELLOW}1. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π...${NC}"
    sudo apt update && sudo apt install -y git curl wget build-essential tmux lsof
    
    # Miniconda
    if ! command -v conda &> /dev/null; then
        echo -e "\n${YELLOW}2. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Miniconda...${NC}"
        wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh
        bash Miniconda3-latest-Linux-x86_64.sh -b -p $HOME/miniconda3
        echo 'export PATH="$HOME/miniconda3/bin:$PATH"' >> ~/.bashrc
        export PATH="$HOME/miniconda3/bin:$PATH"
        rm Miniconda3-latest-Linux-x86_64.sh
    fi
    
    # –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ
    echo -e "\n${YELLOW}3. –ó–∞–≥—Ä—É–∑–∫–∞ Node0...${NC}"
    [ -d "$NODE0_DIR" ] && rm -rf "$NODE0_DIR"
    git clone https://github.com/PluralisResearch/node0 "$NODE0_DIR"
    cd "$NODE0_DIR"
    
    # Python –æ–∫—Ä—É–∂–µ–Ω–∏–µ
    echo -e "\n${YELLOW}4. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Python –ø–∞–∫–µ—Ç–æ–≤...${NC}"
    conda create -n $CONDA_ENV python=3.11 -y
    source ~/miniconda3/bin/activate $CONDA_ENV
    pip install .
    
    # –ü–æ—Ä—Ç
    echo -e "\n${YELLOW}5. –û—Ç–∫—Ä—ã—Ç–∏–µ –ø–æ—Ä—Ç–∞...${NC}"
    sudo ufw allow 49200/tcp && sudo ufw reload
    
    # –¢–æ–∫–µ–Ω
    echo -e "\n${YELLOW}6. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ç–æ–∫–µ–Ω–∞...${NC}"
    echo -e "${RED}–ù—É–∂–µ–Ω —Ç–æ–∫–µ–Ω HuggingFace!${NC}"
    echo "–ü–æ–ª—É—á–∏—Ç–µ –∑–¥–µ—Å—å: https://huggingface.co/settings/tokens"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –∫–æ–≥–¥–∞ –≥–æ—Ç–æ–≤—ã..."
    
    python3 generate_script.py
    
    echo -e "\n${GREEN}‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!${NC}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –ó–∞–ø—É—Å–∫
start_node0() {
    show_logo
    echo -e "${YELLOW}‚ñ∂Ô∏è  –ó–∞–ø—É—Å–∫ Node0${NC}\n"
    
    if [ ! -f "$NODE0_DIR/start_server.sh" ]; then
        echo -e "${RED}Node0 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞! –°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ (–ø—É–Ω–∫—Ç 1)${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
        return 1
    fi
    
    # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    if pgrep -f "node0" > /dev/null; then
        echo -e "${YELLOW}–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ –ø—Ä–æ—Ü–µ—Å—Å–∞...${NC}"
        pkill -f "node0" 2>/dev/null
        tmux kill-session -t node0 2>/dev/null
        sleep 2
    fi
    
    cd "$NODE0_DIR"
    echo -e "${YELLOW}–ó–∞–ø—É—Å–∫ –≤ —Ñ–æ–Ω–µ...${NC}"
    tmux new-session -d -s node0 "./start_server.sh"
    
    echo -e "\n${GREEN}‚úÖ Node0 –∑–∞–ø—É—â–µ–Ω–∞!${NC}"
    echo "–ö–æ–º–∞–Ω–¥—ã:"
    echo "  –ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ —Å–µ—Å—Å–∏–∏: tmux attach -t node0"
    echo "  –û—Ç–∫–ª—é—á–∏—Ç—å—Å—è: Ctrl+B, –∑–∞—Ç–µ–º D"
    echo "  –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏: –ø—É–Ω–∫—Ç 3 –≤ –º–µ–Ω—é"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –õ–æ–≥–∏
view_logs() {
    show_logo
    echo -e "${YELLOW}üìã –õ–æ–≥–∏ Node0${NC}\n"
    
    if [ ! -f "$NODE0_DIR/logs/server.log" ]; then
        echo -e "${RED}–õ–æ–≥–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!${NC}"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
        return 1
    fi
    
    echo "1) –ü–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫"
    echo "2) –°–ª–µ–¥–∏—Ç—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏"
    echo "3) –¢–æ–ª—å–∫–æ –æ—à–∏–±–∫–∏"
    read -p "–í—ã–±–æ—Ä: " choice
    
    case $choice in
        1) tail -n 50 "$NODE0_DIR/logs/server.log" ;;
        2) 
            echo -e "\n${YELLOW}–õ–æ–≥–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞):${NC}\n"
            tail -f "$NODE0_DIR/logs/server.log"
            ;;
        3) grep -i "error\|fail" "$NODE0_DIR/logs/server.log" | tail -20 ;;
    esac
    
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –£–¥–∞–ª–µ–Ω–∏–µ
remove_node0() {
    show_logo
    echo -e "${RED}üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ Node0${NC}\n"
    
    echo -e "${RED}–ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ –≤—Å—ë, –∫—Ä–æ–º–µ private.key${NC}"
    read -p "–í–≤–µ–¥–∏—Ç–µ YES –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è: " confirm
    
    if [ "$confirm" != "YES" ]; then
        echo "–û—Ç–º–µ–Ω–µ–Ω–æ"
        read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
        return 0
    fi
    
    # –û—Å—Ç–∞–Ω–æ–≤–∫–∞
    pkill -f "node0" 2>/dev/null
    tmux kill-session -t node0 2>/dev/null
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞
    if [ -f "$NODE0_DIR/private.key" ]; then
        mkdir -p ~/node0_backup
        cp "$NODE0_DIR/private.key" ~/node0_backup/private.key.$(date +%Y%m%d_%H%M%S)
        echo -e "${GREEN}private.key —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ ~/node0_backup/${NC}"
    fi
    
    # –£–¥–∞–ª–µ–Ω–∏–µ
    rm -rf "$NODE0_DIR"
    conda remove -n $CONDA_ENV --all -y 2>/dev/null
    
    echo -e "\n${GREEN}‚úÖ Node0 —É–¥–∞–ª–µ–Ω–∞${NC}"
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter..."
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
while true; do
    show_logo
    
    # –ë—ã—Å—Ç—Ä—ã–π —Å—Ç–∞—Ç—É—Å
    if pgrep -f "node0" > /dev/null; then
        echo -e "–°—Ç–∞—Ç—É—Å: ${GREEN}‚óè –ó–∞–ø—É—â–µ–Ω–∞${NC}\n"
    else
        echo -e "–°—Ç–∞—Ç—É—Å: ${RED}‚óè –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞${NC}\n"
    fi
    
    echo "  1) üì¶ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Node0"
    echo "  2) ‚ñ∂Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç—å Node0"
    echo "  3) üìã –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏"
    echo "  4) üóëÔ∏è  –£–¥–∞–ª–∏—Ç—å Node0"
    echo "  0) üö™ –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í—ã–±–æ—Ä: " choice
    
    case $choice in
        1) install_node0 ;;
        2) start_node0 ;;
        3) view_logs ;;
        4) remove_node0 ;;
        0) exit 0 ;;
    esac
done
